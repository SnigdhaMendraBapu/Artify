{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","modifiedImageUrl","setModifiedImageUrl","useState","_jsxs","className","children","_jsx","type","onChange","async","file","event","target","files","formData","FormData","append","response","fetch","method","body","ok","data","blob","url","URL","createObjectURL","alert","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"2MAkCeA,MA/Bf,WACE,MAAOC,EAAkBC,GAAuBC,mBAAS,MAqBzD,OACEC,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAAD,SAAI,oBACJC,cAAA,SAAOC,KAAK,OAAOC,SAtBGC,UACxB,MAAMC,EAAOC,EAAMC,OAAOC,MAAM,GAC1BC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASN,GAEzB,MAAMO,QAAiBC,MAAM,sCAAuC,CAClEC,OAAQ,OACRC,KAAMN,IAGR,GAAIG,EAASI,GAAI,CACf,MAAMC,QAAaL,EAASM,OACtBC,EAAMC,IAAIC,gBAAgBJ,GAChCrB,EAAoBuB,EACtB,MACEG,MAAM,sBACR,IAOG3B,GAAoBM,cAAA,OAAKsB,IAAK5B,EAAkB6B,IAAI,eAG3D,E,OCpBeC,MAVUC,IACnBA,GAAeA,aAAuBC,WACxCC,YAAOF,GACPG,YAAOH,GACPI,YAAOJ,GACPK,YAAOL,GACPM,YAAQN,GACV,ECHWO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,cAACqC,IAAMC,WAAU,CAAAvC,SACfC,cAACP,EAAG,OAOR+B,G","file":"static/js/main.5b7f4484.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [modifiedImageUrl, setModifiedImageUrl] = useState(null);\n\n  const handleImageUpload = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n\n    const response = await fetch('https://artify.herokuapp.com/upload', {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (response.ok) {\n      const data = await response.blob();\n      const url = URL.createObjectURL(data);\n      setModifiedImageUrl(url);\n    } else {\n      alert('Image upload failed');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Upload an Image</h1>\n      <input type=\"file\" onChange={handleImageUpload} />\n      {modifiedImageUrl && <img src={modifiedImageUrl} alt=\"Modified\" />}\n    </div>\n  );\n}\n\nexport default App;\n","import { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}